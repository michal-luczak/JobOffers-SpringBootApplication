version: '3.1'

services:
  mongo:
    container_name: mongo
    image: mongo:4.0.10
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: job-offers
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro

  postgres:
    container_name: postgres
    image: postgres:15.2
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: p0stgr3s_us3rn4m3
      POSTGRES_PASSWORD: SEagFcLVG7UAdbnttC
      POSTGRES_DB: job-offers-users

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    restart: always

  job-offers:
    container_name: job-offers
    build: .
    image: 509192113520.dkr.ecr.eu-central-1.amazonaws.com/job-offers:latest
    restart: always
    ports:
      - "8000:8080"
    environment:
#      MONGODB_USERNAME: ${MONGODB_USERNAME}
#      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
#      MONGODB_HOSTNAME: ${MONGODB_HOSTNAME}
#      MONGODB_PORT: ${MONGODB_PORT}
#      MONGODB_NAME: ${MONGODB_NAME}
#      REDIS_HOSTNAME: ${REDIS_HOSTNAME}
#      REDIS_PORT: ${REDIS_PORT}
#      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
#      POSTGRES_PORT: ${POSTGRES_PORT}
#      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME}
#      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      JWT_SECRET: ${JWT_SECRET}
        MONGODB_USERNAME: root
        MONGODB_PASSWORD: password
        MONGODB_HOSTNAME: mongo
        MONGODB_PORT: 27017
        MONGODB_NAME: job-offers
        REDIS_HOSTNAME: redis
        REDIS_PORT: 6379
        POSTGRES_HOSTNAME: postgres
        POSTGRES_PORT: 5432
        POSTGRES_DB_NAME: job-offers-users
        POSTGRES_USERNAME: p0stgr3s_us3rn4m3
        POSTGRES_PASSWORD: SEagFcLVG7UAdbnttC
        JWT_SECRET: 4dy2dLFc7Dw9uWAPuX
